spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: none

    properties:
      hibernate:
        highlight_sql: true
        format_sql: true
        show_sql: true
      dialect: org.hibernate.dialect.MySQL5InnoDBDialect

  datasource:
    url: jdbc:mysql://ec2-52-79-52-23.ap-northeast-2.compute.amazonaws.com:3306/main28
    username: seb45
    password: Seb45_main28
    driver-class-name: com.mysql.cj.jdbc.Driver

logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
server:
#  port: 8081
  servlet:
    encoding:
      force-response: true
h2:
  console:
    enabled: false

jwt:
  access-token-expiration-minutes: 60
  refresh-token-expiration-minutes: 120
security:
  oauth2:
    client:
      registration:
        google:
          clientId: ${G_CLIENT_ID}
          clientSecret: ${G_CLIENT_SECRET}
          scope:
            - email
            - profile
cloud:
  aws:
    credentials.access-key: ${S3_ACCESS_KEY}
    credentials.secret-key: ${S3_SECRET_KEY}
    s3.bucket: 28be
    region.static: ap-northeast-2
    stack.auto: false

name: Java CI with Gradle

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t spring-cicd . 
          docker tag spring-cicd jwhong123123/spring-cicd:${GITHUB_SHA::7}
          docker push jwhong123123/spring-cicd:${GITHUB_SHA::7}